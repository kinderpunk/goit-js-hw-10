{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["('use strict');\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport error from '../img/octagon.svg';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    userSelectedDate = selectedDate;\n\n    if (selectedDate <= new Date()) {\n      refs.startBtn.disabled = true;\n\n      iziToast.show({\n        theme: 'dark',\n        message: 'Please choose a date in the future',\n        messageColor: '#ffffff',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        iconUrl: error,\n        progressBarColor: '#b51b1b',\n        pauseOnHover: true,\n        closeColor: '#ffffff',\n        timeout: 3000,\n      });\n    } else {\n      refs.startBtn.disabled = false;\n    }\n\n    timer.setTargetTime(selectedDate);\n  },\n};\n\nflatpickr('#datetime-picker', options);\nlet userSelectedDate = new Date();\n\nconst refs = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  startBtn: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    this.isActive = false;\n    this.onTick = onTick;\n    this.startTime = null;\n    this.targetTime = 0;\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    refs.startBtn.disabled = true;\n    refs.input.disabled = true;\n\n    this.timerInterval = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetTime - currentTime + 1000;\n      const time = this.convertMs(deltaTime);\n\n      if (deltaTime <= 0) {\n        this.stop();\n        return;\n      }\n\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.timerInterval);\n    this.isActive = false;\n    refs.startBtn.disabled = false;\n    refs.input.disabled = false;\n  }\n\n  setTargetTime(selectedDate) {\n    userSelectedDate = selectedDate;\n    this.targetTime = selectedDate.getTime();\n  }\n\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = this.addLeadingZero(Math.floor(ms / day));\n    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = this.addLeadingZero(\n      Math.floor(((ms % day) % hour) / minute)\n    );\n    const seconds = this.addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateTime,\n});\n\nrefs.startBtn.addEventListener('click', () => {\n  if (userSelectedDate && userSelectedDate > new Date()) {\n    timer.start();\n  }\n});\n\nfunction updateTime({ days, hours, minutes, seconds }) {\n  refs.days.textContent = `${days}`;\n  refs.hours.textContent = `${hours}`;\n  refs.minutes.textContent = `${minutes}`;\n  refs.seconds.textContent = `${seconds}`;\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["options","selectedDates","selectedDate","userSelectedDate","refs","iziToast","error","timer","flatpickr","Timer","onTick","currentTime","deltaTime","time","value","ms","days","hours","minutes","seconds","updateTime"],"mappings":"4IAQA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EACpCE,EAAmBD,EAEfA,GAAgB,IAAI,MACtBE,EAAK,SAAS,SAAW,GAEzBC,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,SAAU,WACV,QAASC,EACT,iBAAkB,UAClB,aAAc,GACd,WAAY,UACZ,QAAS,GACjB,CAAO,GAEDF,EAAK,SAAS,SAAW,GAG3BG,EAAM,cAAcL,CAAY,CACjC,CACH,EAEAM,EAAU,mBAAoBR,CAAO,EACrC,IAAIG,EAAmB,IAAI,KAE3B,MAAMC,EAAO,CACX,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,kBAAkB,CAClD,EAEA,MAAMK,CAAM,CACV,YAAY,CAAE,OAAAC,GAAU,CACtB,KAAK,SAAW,GAChB,KAAK,OAASA,EACd,KAAK,UAAY,KACjB,KAAK,WAAa,CACnB,CAED,OAAQ,CACF,KAAK,WAIT,KAAK,SAAW,GAChBN,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtB,KAAK,cAAgB,YAAY,IAAM,CACrC,MAAMO,EAAc,KAAK,MACnBC,EAAY,KAAK,WAAaD,EAAc,IAC5CE,EAAO,KAAK,UAAUD,CAAS,EAErC,GAAIA,GAAa,EAAG,CAClB,KAAK,KAAI,EACT,MACD,CAED,KAAK,OAAOC,CAAI,CACjB,EAAE,GAAI,EACR,CAED,MAAO,CACL,cAAc,KAAK,aAAa,EAChC,KAAK,SAAW,GAChBT,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,EACvB,CAED,cAAcF,EAAc,CAC1BC,EAAmBD,EACnB,KAAK,WAAaA,EAAa,SAChC,CAED,eAAeY,EAAO,CACpB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,UAAUC,EAAI,CAMZ,MAAMC,EAAO,KAAK,eAAe,KAAK,MAAMD,EAAK,KAAG,CAAC,EAC/CE,EAAQ,KAAK,eAAe,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EACzDG,EAAU,KAAK,eACnB,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,CAC7C,EACUI,EAAU,KAAK,eACnB,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,CACxD,EAEI,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,CAEA,MAAMZ,EAAQ,IAAIE,EAAM,CACtB,OAAQW,CACV,CAAC,EAEDhB,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACxCD,GAAoBA,EAAmB,IAAI,MAC7CI,EAAM,MAAK,CAEf,CAAC,EAED,SAASa,EAAW,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrD,OAAAf,EAAK,KAAK,YAAc,GAAGY,CAAI,GAC/BZ,EAAK,MAAM,YAAc,GAAGa,CAAK,GACjCb,EAAK,QAAQ,YAAc,GAAGc,CAAO,GACrCd,EAAK,QAAQ,YAAc,GAAGe,CAAO,GAE9B,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}